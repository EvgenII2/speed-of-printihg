{"version":3,"sources":["components/Popup/Popup.jsx","components/InfoComponent/InfoComponent.jsx","components/TextComponent/TextComponent.jsx","utils/TextApi.js","utils/ServiceKeyCodes.js","components/App/App.jsx","index.js"],"names":["Popup","isOpen","message","onClick","buttonTitle","className","type","InfoComponent","title","value","unit","isNaN","TextComponent","printedText","textToPrint","charAt","substr","textApi","options","this","baseUrl","fetch","then","response","json","SERVICE_KEY_CODES","App","React","useState","time","setTime","speed","setSpeed","accuracy","setAccuracy","isStart","setIsStart","isFinish","setIsFinish","textLength","setTextLength","finishTime","setFinishTime","setPrintedText","setTextToPrint","isUncorrect","setIsUncorrect","isTimerActive","setIsTimerActive","currentSymbol","setCurrentSymbol","numberOfSymbols","setNumberOfSymbols","numberOfUncorrectSymbols","setNumberOfUncorrectSymbols","getText","res","resString","toString","replace","length","catch","err","console","log","changeStatesToStartValues","onPressKeyHandler","useCallback","ev","includes","keyCode","currentKey","key","substring","useEffect","document","addEventListener","removeEventListener","interval","setInterval","clearInterval","toFixed","undefined","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1670b58b.chunk.js","sourcesContent":["import \"./Popup.css\";\r\n\r\nfunction Popup({ isOpen, message, onClick, buttonTitle = \"Ok\" }) {\r\n    return isOpen ? (\r\n        <div className={\"Popup\"}>\r\n            <div className=\"Popup__container\">\r\n                <h2 className=\"Popup__title\">\r\n                    {message}\r\n                </h2>\r\n                <button\r\n                    aria-label=\"закрыть\"\r\n                    type=\"button\"\r\n                    className=\"Popup__button\"\r\n                    onClick={onClick}\r\n                >\r\n                    {buttonTitle}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className={\"Popup_unvisible\"} />\r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","import \"./InfoComponent.css\";\r\n\r\nfunction InfoComponent({ title, value, unit }) {\r\n    return (\r\n        <p className=\"InfoComponent\">\r\n            <span className=\"InfoComponent__title\">{title}:</span>\r\n            <span className=\"InfoComponent__value\">\r\n                {` ${(value && !isNaN(value)) ? value : \" - \"} ${unit}`}\r\n            </span>\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default InfoComponent;\r\n","import \"./TextComponent.css\";\r\n\r\nfunction TextComponent({ printedText, textToPrint }) {\r\n    return (\r\n        <article className=\"TextComponent\">\r\n            <span className=\"TextComponent__printed-text\">\r\n                {printedText}\r\n            </span>\r\n            <span className=\"TextComponent__current-symbol\">\r\n                {textToPrint.charAt(0)}\r\n            </span>\r\n            <span className=\"TextComponent__text-to-print\">\r\n                {textToPrint.substr(1)}\r\n            </span>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default TextComponent;\r\n","class TextApi {\r\n    constructor(options) {\r\n        this.options = options;\r\n        this.baseUrl = this.options.baseUrl;\r\n    }\r\n\r\n    getText() {\r\n        return fetch(`${this.baseUrl}`)\r\n            .then(response => response.json())\r\n    }\r\n}\r\n\r\nconst textApi = new TextApi({\r\n    baseUrl: \"https://baconipsum.com/api/?type=meat-and-filler&paras=1\",\r\n});\r\n\r\nexport default textApi;\r\n","export const SERVICE_KEY_CODES = [8, 9, 13, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 91, 92, 93, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 144, 145];","import \"./App.css\";\r\n\r\nimport React from \"react\";\r\nimport Popup from \"../Popup/Popup\";\r\nimport InfoComponent from \"../InfoComponent/InfoComponent\";\r\nimport TextComponent from \"../TextComponent/TextComponent\";\r\n\r\nimport textApi from \"../../utils/TextApi\";\r\nimport { SERVICE_KEY_CODES } from \"../../utils/ServiceKeyCodes\";\r\n\r\nfunction App() {\r\n    const [time, setTime] = React.useState(0);\r\n    const [speed, setSpeed] = React.useState(0);\r\n    const [accuracy, setAccuracy] = React.useState(0);\r\n    const [isStart, setIsStart] = React.useState(true);\r\n    const [isFinish, setIsFinish] = React.useState(false);\r\n    const [textLength, setTextLength] = React.useState(0);\r\n    const [finishTime, setFinishTime] = React.useState(0);\r\n    const [printedText, setPrintedText] = React.useState(\"\");\r\n    const [textToPrint, setTextToPrint] = React.useState(\"\");\r\n    const [isUncorrect, setIsUncorrect] = React.useState(false);\r\n    const [isTimerActive, setIsTimerActive] = React.useState(false);\r\n    const [currentSymbol, setCurrentSymbol] = React.useState(\"\");\r\n    const [numberOfSymbols, setNumberOfSymbols] = React.useState(0);\r\n    const [numberOfUncorrectSymbols, setNumberOfUncorrectSymbols] = React.useState(0);\r\n\r\n    const getText = () => {\r\n        textApi.getText()\r\n            .then((res) => {\r\n                const resString = res.toString().replace(/\\s+/g, \" \");\r\n                setTextToPrint(resString);\r\n                setTextLength(resString.length - 1);\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error: ${err}`);\r\n            });\r\n    };\r\n\r\n    const changeStatesToStartValues = () => {\r\n        setTime(0);\r\n        setSpeed(0);\r\n        setAccuracy(0);\r\n        setIsStart(true);\r\n        setIsFinish(false);\r\n        setTextLength(0);\r\n        setFinishTime(0);\r\n        setPrintedText(\"\");\r\n        setTextToPrint(\"\");\r\n        setIsUncorrect(false);\r\n        setIsTimerActive(false);\r\n        setCurrentSymbol(\"\");\r\n        setNumberOfSymbols(0);\r\n        setNumberOfUncorrectSymbols(0);\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        changeStatesToStartValues();\r\n        getText();\r\n    };\r\n\r\n    const onPressKeyHandler = React.useCallback((ev) => {\r\n        if (!SERVICE_KEY_CODES.includes(ev.keyCode)) {\r\n            const currentKey = ev.key;\r\n            if (currentKey === currentSymbol && !isStart) {\r\n                setPrintedText(printedText + currentKey);\r\n                setTextToPrint(textToPrint?.substring(1));\r\n                setNumberOfSymbols(numberOfSymbols + 1);\r\n                setIsUncorrect(false);\r\n                if (numberOfSymbols !== 0 && numberOfSymbols === textLength) {\r\n                    setFinishTime(time);\r\n                    setIsTimerActive(false);\r\n                    setIsFinish(true);\r\n                }\r\n            } else {\r\n                setNumberOfUncorrectSymbols(numberOfUncorrectSymbols + 1);\r\n                setIsUncorrect(true);\r\n            }\r\n        }\r\n    }, [\r\n        time,\r\n        currentSymbol,\r\n        textToPrint,\r\n        printedText,\r\n        numberOfUncorrectSymbols,\r\n        numberOfSymbols,\r\n        isStart,\r\n        textLength\r\n    ]);\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", onPressKeyHandler);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", onPressKeyHandler);\r\n        }\r\n    }, [onPressKeyHandler]);\r\n\r\n    React.useEffect(() => {\r\n        let interval = null;\r\n        if (isTimerActive) {\r\n            interval = setInterval(() => {\r\n                setTime(time => time + 1);\r\n            }, 1000);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, [isTimerActive, time]);\r\n\r\n    React.useEffect(() => {\r\n        getText();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (!isStart) {\r\n            setSpeed((numberOfSymbols / time * 60).toFixed(2));\r\n        }\r\n    }, [numberOfSymbols, isStart, time]);\r\n\r\n    React.useEffect(() => {\r\n        if (textToPrint !== undefined) {\r\n            setCurrentSymbol(textToPrint.charAt(0));\r\n        }\r\n    }, [textToPrint]);\r\n\r\n    React.useEffect(() => {\r\n        setAccuracy((100 - numberOfUncorrectSymbols / (numberOfSymbols + numberOfUncorrectSymbols) * 100).toFixed(2));\r\n    }, [numberOfSymbols, numberOfUncorrectSymbols]);\r\n\r\n    const closeStartPopup = () => {\r\n        setIsStart(false);\r\n        setIsTimerActive(true);\r\n    }\r\n\r\n    const closeFinishPopup = () => {\r\n        changeStatesToStartValues();\r\n        getText();\r\n    }\r\n\r\n    return (\r\n        <div className={isUncorrect ? \"App App__error\" : \"App\"}>\r\n            <Popup\r\n                isOpen={isStart}\r\n                message=\"Are you ready?\"\r\n                onClick={closeStartPopup}\r\n                buttonTitle=\"Start\"\r\n            />\r\n            <Popup\r\n                isOpen={isFinish}\r\n                message={`You entered ${numberOfSymbols} symbols to ${finishTime} sec. Your speed is ${speed} sym/min. Your accuracy is ${accuracy}%.`}\r\n                onClick={closeFinishPopup}\r\n            />\r\n            <h1 className=\"App__header\">\r\n                Speed of printing\r\n            </h1>\r\n            <div className=\"App__main\">\r\n                <TextComponent\r\n                    printedText={printedText}\r\n                    textToPrint={textToPrint}\r\n                />\r\n                <div className=\"App__info-column\">\r\n                    <InfoComponent\r\n                        title=\"Time\"\r\n                        value={time}\r\n                        unit=\"sec.\"\r\n                    />\r\n                    <InfoComponent\r\n                        title=\"Speed\"\r\n                        value={speed}\r\n                        unit=\"sym/min\"\r\n                    />\r\n                    <InfoComponent\r\n                        title=\"You entered\"\r\n                        value={numberOfSymbols}\r\n                        unit=\"symbols\"\r\n                    />\r\n                    <InfoComponent\r\n                        title=\"Accuracy\"\r\n                        value={accuracy}\r\n                        unit=\"%\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"App__button\"\r\n                onClick={onClickHandler}\r\n            >\r\n                Another text\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}